================================================================================
Return
================================================================================

fn main(a: usize) -> usize {
  return a + 1;
}

--------------------------------------------------------------------------------

(source_file
  (new_line)
  (fn
    (sig
      (name)
      (sig_args
        (sig_arg
          (pat
            (name))
          (type
            (path
              (path_seg
                (name))))))
      (type
        (path
          (path_seg
            (name)))))
    (block
      (new_line)
      (return
        (op
          (path
            (path_seg
              (name)))
          (int)))
      (new_line)))
  (new_line))

================================================================================
TypePath
================================================================================

fn something(a: Namespace\Type) -> builtin {
  return
}

--------------------------------------------------------------------------------

(source_file
  (new_line)
  (fn
    (sig
      (name)
      (sig_args
        (sig_arg
          (pat
            (name))
          (type
            (path
              (path_seg
                (name))
              (path_seg
                (name))))))
      (type
        (path
          (path_seg
            (name)))))
    (block
      (new_line)
      (return)
      (new_line)))
  (new_line))

================================================================================
Pattern
================================================================================

fn something(\{ a: \Some~f, b, .. }: namespace\Type) extern

--------------------------------------------------------------------------------

(source_file
  (new_line)
  (fn
    (sig
      (name)
      (sig_args
        (sig_arg
          (pat
            (struct_pat
              (name)
              (pat
                (enum_pat
                  (name)
                  (pat
                    (name))))
              (name)))
          (type
            (path
              (path_seg
                (name))
              (path_seg
                (name))))))))
  (new_line))

================================================================================
call
================================================================================

fn func() {
  let a = b.f(l, p, q(f, u))
}

--------------------------------------------------------------------------------

(source_file
  (new_line)
  (fn
    (sig
      (name)
      (sig_args))
    (block
      (new_line)
      (let_
        (pat
          (name))
        (call
          (path
            (path_seg
              (name)))
          (path
            (path_seg
              (name)))
          (path
            (path_seg
              (name)))
          (path
            (path_seg
              (name)))
          (call
            (path
              (path_seg
                (name)))
            (path
              (path_seg
                (name)))
            (path
              (path_seg
                (name))))))
      (new_line)))
  (new_line))

================================================================================
loop
================================================================================

fn main {
  loop {
    break 'a 10
    break
    continue 'a
  }
}

--------------------------------------------------------------------------------

(source_file
  (new_line)
  (fn
    (sig
      (name))
    (block
      (new_line)
      (loop
        (block
          (new_line)
          (break_
            (label)
            (int))
          (new_line)
          (break_)
          (new_line)
          (continue_
            (label))
          (new_line)))
      (new_line)))
  (new_line))
